- name: Download and install Rust using rustup
  ansible.builtin.shell:
    cmd: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
    creates: "{{ ansible_env.HOME }}/.cargo/bin/rustc"

- name: Source Rust environment variables
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: 'source "$HOME/.cargo/env"'
    create: yes

- name: Install efs-utils for debian 
  include_tasks: efs_utils_debian.yaml
  when: ansible_distribution == "Ubuntu"

- name: Install efs-utils for debian 
  include_tasks: efs_utils_rpm.yaml
  when: ansible_fact['os_family'] == "RedHat"

- name: Download stunnel package
  get_url:
    url: https://www.stunnel.org/downloads/stunnel-5.74.tar.gz
    dest: "/tmp/stunnel-5.74.tar.gz"
    mode: '0644' 

- name: Extract stunnel-5.74.tar.gz
  ansible.builtin.unarchive:
    src: "/tmp/stunnel-5.74.tar.gz"
    dest: "/tmp/"
    remote_src: yes

- name: Run configure before make
  ansible.builtin.command:
    cmd: ./configure
    chdir: "/tmp/stunnel-5.74"

- name: Compile Stunnel
  ansible.builtin.command:
    cmd: "make"
    chdir: "/tmp/stunnel-5.74"

- name: Remove existing stunnel binary (if exists)
  ansible.builtin.file:
    path: "/bin/stunnel"
    state: absent

- name: Install Stunnel
  ansible.builtin.command:
    cmd: "make install"
    chdir: "/tmp/stunnel-5.74"

- name: Create symlink for stunnel
  ansible.builtin.file:
    src: "/usr/local/bin/stunnel"
    dest: "/bin/stunnel"
    state: link

